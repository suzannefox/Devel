write.table("content,dataitem,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$x[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
write.table(",count,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$freq[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
# force newline
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
}
myContent(tester$V1,"tester$V1","")
myContent <- function(Field, FieldName, FileName) {
# Get unique values and their count
library(plyr)
FieldCounts <- count(Field)
# write number of uniques
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("Unique,",nrow(FieldCounts),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
uclass <- sapply(u1,class)
# Data type
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("DataType,",uclass[1],sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# print stats for numeric variables
if (uclass[1]=="numeric") {
# Max value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("MAX,",max(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Min value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("MIN,",min(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Mean value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("MEAN,",mean(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Length
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("LENGTH,",length(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Std Dev
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("STDERR,",sd(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Var
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("MEAN,",var(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Median
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("MEAN,",mean(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
# write the contents of the vector to the csv file
for(i in seq_along(FieldCounts$x)){
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("content,dataitem,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$x[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
write.table(",count,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$freq[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
# force newline
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
}
myContent(tester$V1,"tester$V1","")
myContent <- function(Field, FieldName, FileName) {
# Get unique values and their count
library(plyr)
FieldCounts <- count(Field)
# write number of uniques
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("Unique,",nrow(FieldCounts),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
uclass <- sapply(u1,class)
# Data type
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("DataType,",uclass[1],sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# print stats for numeric variables
if (uclass[1]=="numeric") {
# Max value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("MAX,",max(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Min value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("MIN,",min(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Mean value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("MEAN,",mean(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Length
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("LENGTH,",length(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Std Dev
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("STDERR,",sd(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Var
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("VAR,",var(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Median
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("MEDIAN,",median(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
# write the contents of the vector to the csv file
for(i in seq_along(FieldCounts$x)){
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("content,dataitem,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$x[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
write.table(",count,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$freq[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
# force newline
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
}
myContent(tester$V1,"tester$V1","")
myContent <- function(Field, FieldName, FileName) {
# Get unique values and their count
library(plyr)
FieldCounts <- count(Field)
# write number of uniques
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,Unique,",nrow(FieldCounts),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
uclass <- sapply(u1,class)
# Data type
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,DataType,",uclass[1],sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# print stats for numeric variables
if (uclass[1]=="numeric") {
# Max value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MAX,",max(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Min value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MIN,",min(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Mean value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MEAN,",mean(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Length
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,LENGTH,",length(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Std Dev
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,STDERR,",sd(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Var
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,VAR,",var(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Median
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MEDIAN,",median(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
# write the contents of the vector to the csv file
for(i in seq_along(FieldCounts$x)){
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("content,dataitem,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$x[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
write.table(",count,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$freq[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
# force newline
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
}
myContent(tester$V1,"tester$V1","")
myContent <- function(Field, FieldName, FileName) {
# Get unique values and their count
library(plyr)
FieldCounts <- count(Field)
nrows <- nrow(Field)
nuniques <- nrow(FieldCount)
uclass <- sapply(u1,class)
# Data type
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,DataType,",uclass[1],sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Length
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,RECORDS,",nrows,sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# write number of uniques
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,UNIQUES,",nuniques,sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Density
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,DENSITY,",nrows/nuniques,sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# print stats for numeric variables
if (uclass[1]=="numeric") {
# Max value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MAX,",max(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Min value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MIN,",min(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Mean value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MEAN,",mean(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Std Dev
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,STDERR,",sd(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Var
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,VAR,",var(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Median
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MEDIAN,",median(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
# write the contents of the vector to the csv file
for(i in seq_along(FieldCounts$x)){
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("content,dataitem,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$x[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
write.table(",count,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$freq[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
# force newline
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
}
myContent(tester$V1,"tester$V1","")
myContent <- function(Field, FieldName, FileName) {
# Get unique values and their count
library(plyr)
FieldCounts <- count(Field)
nrows <- nrow(Field)
nuniques <- nrow(FieldCounts)
uclass <- sapply(u1,class)
# Data type
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,DataType,",uclass[1],sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Length
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,RECORDS,",nrows,sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# write number of uniques
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,UNIQUES,",nuniques,sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Density
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,DENSITY,",nrows/nuniques,sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# print stats for numeric variables
if (uclass[1]=="numeric") {
# Max value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MAX,",max(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Min value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MIN,",min(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Mean value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MEAN,",mean(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Std Dev
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,STDERR,",sd(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Var
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,VAR,",var(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Median
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MEDIAN,",median(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
# write the contents of the vector to the csv file
for(i in seq_along(FieldCounts$x)){
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("content,dataitem,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$x[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
write.table(",count,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$freq[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
# force newline
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
}
myContent(tester$V1,"tester$V1","")
x4 = nrow(tester$V1)
x4 = nrow(tester)
x4 = nrow(x3)
str(x3)
rm(list = ls())
graphics.off()
source('D:/R/Functions/AnalyseVariable2.R', echo=TRUE)
myContent <- function(Field, FieldName, FileName) {
# Get unique values and their count
library(plyr)
FieldCounts <- count(Field)
nrows <- nrow(Field)
nuniques <- nrow(FieldCounts)
uclass <- sapply(u1,class)
# Data type
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,DataType,",uclass[1],sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Length
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,RECORDS,",nrows,sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# write number of uniques
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,UNIQUES,",nuniques,sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Density
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,DENSITY,",nrows/nuniques,sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# print stats for numeric variables
if (uclass[1]=="numeric") {
# Max value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MAX,",max(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Min value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MIN,",min(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Mean value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MEAN,",mean(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Std Dev
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,STDERR,",sd(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Var
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,VAR,",var(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Median
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MEDIAN,",median(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
# write the contents of the vector to the csv file
for(i in seq_along(FieldCounts$x)){
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("content,dataitem,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$x[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
write.table(",count,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$freq[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
# force newline
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
}
myContent(tester$V1,"tester$V1","")
# ==============================================================
mysummary <- function(x, npar=TRUE, print=TRUE) {
myMean <- mean(x)
myStdDev <- sd(x)
myVar <- var(x)
myMedian <- median(x)
result <- list(MeanIs=myMean, StdDevIs=myStdDev, VarIs=myVar, MedianIs=myMedian)
return(result)
}
source('D:/R/Functions/AnalyseVariable2.R', echo=TRUE)
source('D:/R/Functions/AnalyseVariable2.R', echo=TRUE)
myContent <- function(Field, FieldName, FileName) {
# Get unique values and their count
library(plyr)
FieldCounts <- count(Field)
nrows <- nrow(Field)
nuniques <- nrow(FieldCounts)
uclass <- sapply(u1,class)
# Data type
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,DataType,",uclass[1],sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Length
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,RECORDS,",nrows,sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# write number of uniques
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,UNIQUES,",nuniques,sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Density
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,DENSITY,",nrows/nuniques,sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# print stats for numeric variables
if (uclass[1]=="numeric") {
# Max value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MAX,",max(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Min value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MIN,",min(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Mean value
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MEAN,",mean(FieldCounts[,1]),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Std Dev
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,STDERR,",sd(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Var
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,VAR,",var(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
# Median
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(paste("PARAMS,MEDIAN,",median(Field),sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
# write the contents of the vector to the csv file
for(i in seq_along(FieldCounts$x)){
write.table(paste("Field,",FieldName,",",sep=""),FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table("content,dataitem,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$x[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
write.table(",count,",FileName,append=TRUE,row.names=FALSE, col.names=FALSE,quote=FALSE,eol="")
write.table(FieldCounts$freq[i],FileName,append=TRUE,row.names=FALSE, col.names=FALSE, quote=FALSE,eol="")
# force newline
write.table("", FileName, append=TRUE, row.names=FALSE,col.names=FALSE, quote=FALSE)
}
}
myContent(tester$V1,"tester$V1","")
# ==============================================================
mysummary <- function(x, npar=TRUE, print=TRUE) {
myMean <- mean(x)
myStdDev <- sd(x)
myVar <- var(x)
myMedian <- median(x)
result <- list(MeanIs=myMean, StdDevIs=myStdDev, VarIs=myVar, MedianIs=myMedian)
return(result)
}
source('D:/R/Functions/AnalyseVariable2.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
str(FieldCounts)
uclass <- sapply(FieldCounts,class)
uclass[1]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
myContent(iris$Sepal.Length,"SL","")
source('~/.active-rstudio-document', echo=TRUE)
X2 <- function(x){ x^2 }
apply(M,2,X2)
?apply
apply(iris,2,myContent(,"",""))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
compress= function( df , x ) {
lapply( x , function(x){
print "my name is"
}
)
}
compress= function( df , x ) {
lapply( x , function(x){
print "my name is"
}
}
compress= function( df , x ) {
lapply( x , function(x){
#print "my name is"
}
}
for(i in names(iris)){
print (i)
#df[[paste(i, 'length', sep="_")]] <- str_length(df[[i]])
}
for(i in names(iris)){
print (df[[i]])
#myContent(iris$)
#df[[paste(i, 'length', sep="_")]] <- str_length(df[[i]])
}
for(i in names(iris)){
print (iris[[i]])
#myContent(iris$)
#df[[paste(i, 'length', sep="_")]] <- str_length(df[[i]])
}
for(i in names(iris)){
#print (iris[[i]])
myContent(iris[[i]],i,"")
#df[[paste(i, 'length', sep="_")]] <- str_length(df[[i]])
}
source('D:/R/Functions/AnalyseVariable2.R', echo=TRUE)
nrow(iris$Sepal.Length)
nrow(iris)
nrow(data.frame(iris$Sepal.Length))
source('D:/R/Functions/myContent.R', echo=TRUE)
source('D:/R/Functions/AnalyseVariable2.R', echo=TRUE)
source('D:/R/Functions/myContent.R', echo=TRUE)
source('D:/R/Functions/AnalyseVariable2.R', echo=TRUE)
